var searchIndex = JSON.parse('{\
"secret_tree":{"doc":"Hierarchical secret derivation with Blake2b and random …","t":[8,17,3,4,13,17,3,6,13,10,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AsByteSliceMut","MAX_NAME_LEN","Name","NameError","NullChar","SEED_LEN","SecretTree","Seed","TooLong","as_byte_slice_mut","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","child","clone","clone_into","convert_to_le","create_secret","eq","fill","fmt","fmt","fmt","fmt","fmt","from","from","from","from_seed","from_slice","from_str","hash","index","into","into","into","ne","new","new","rng","seed","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":["secret_tree","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Converts a type to a mutable byte slice. This is used …","Maximum byte length of a [<code>Name</code>] (16).","Name of a child [<code>SecretTree</code>].","Errors that can occur when converting a <code>&str</code> into [<code>Name</code>].","Name contains a null char <code>\\\\0</code>.","Byte length of a <code>Seed</code> (32).","Seeded structure that can be used to produce secrets and …","Alias for a [<code>Secret</code>] array that contains seed bytes.","The string is too long. <code>Name</code>s should be 0..=16 bytes.","Performs conversion to a mutable byte slice.","","","","","","","","Produces a child with the specified string identifier.","","","Converts values within this type to the little-endian …","Creates a secret by creating a buffer and filling it with …","","Fills the specified buffer with a key derived from the …","","","","","","","","","Creates a tree from the seed.","Restores a tree from the seed specified as a byte slice.","","","Produces a child with the specified integer index.","","","","","Generates a tree by sampling its seed from the supplied …","Creates a new <code>Name</code>.","Converts this tree into a cryptographically secure …","Returns the tree seed.","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,0,0,0,1,2,3,4,3,1,4,3,1,4,3,3,2,4,3,4,4,3,3,1,1,4,3,1,4,4,3,3,4,4,3,1,3,4,3,4,4,3,3,1,4,3,1,4,3,1,4,3,1,4,3,1],"f":[null,null,null,null,null,null,null,null,null,[[]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[["name",3]]],[[],["name",3]],[[]],[[]],[[],["secret",3]],[[["name",3]],["bool",15]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["seed",6]]],[[],[["result",4],["tryfromsliceerror",3]]],[[["str",15]],["result",4]],[[]],[[["u64",15]]],[[]],[[]],[[]],[[["name",3]],["bool",15]],[[]],[[["str",15]]],[[],["chacharng",6]],[[],["seed",6]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]]],"p":[[4,"NameError"],[8,"AsByteSliceMut"],[3,"Name"],[3,"SecretTree"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};